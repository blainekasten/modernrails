/**
 * @see http://webpack.github.io/docs/configuration.html
 * for webpack configuration options
 */
module.exports = [{
  // 'context' sets the directory where webpack looks for module files you list in
  // your 'require' statements
  context: __dirname + '/app/assets/javascripts',

  // 'entry' specifies the entry point, where webpack starts reading all
  // dependencies listed and bundling them into the output file.
  // The entrypoint can be anywhere and named anything - here we are calling it
  // '_application' and storing it in the 'javascripts' directory to follow
  // Rails conventions.
  entry: './_main.js',

  // 'output' specifies the filepath for saving the bundled output generated by
  // wepback.
  // It is an object with options, and you can interpolate the name of the entry
  // file using '[name]' in the filename.
  // You will want to add the bundled filename to your '.gitignore'.
  output: {
    filename: '[name].bundle.js',
    // We want to save the bundle in the same directory as the other JS.
    path: __dirname + '/app/assets/javascripts',
  },

  // Turns on source maps
  // Prefix with a '#' to squash the FF warnings that say:
  // 'Using //@ to indicate sourceMappingURL pragmas is deprecated.
  // Use //# instead'
  devtool: '#eval-source-map',

  // The 'module' and 'loaders' options tell webpack to use loaders.
  // @see http://webpack.github.io/docs/using-loaders.html
  module: modules(),

  resolve: {
    extensions: ['', '.js', '.jsx'],

    alias: aliases()
  }
},


/*
 * build component build
 */
{
  context: __dirname + '/app/assets/javascripts',
  entry: './_components.js',
  output: {
    filename: 'components.js',
    // We want to save the bundle in the same directory as the other JS.
    path: __dirname + '/app/assets/javascripts',
  },
  module: modules(),

  resolve: {
    extensions: ['', '.js', '.jsx'],

    alias: aliases()
  }


}];




/*
 * define the aliases for requiring modules
 */
function aliases(){
  return {
    moment$: __dirname + '/vendor/assets/bower_components/moment/moment.js',
    flux$: __dirname + '/vendor/assets/bower_components/flux/dist/Flux.js',
    event_emitter$: __dirname + '/vendor/assets/javascripts/event_emitter.js',
    base_event_emitter$: __dirname + '/vendor/assets/bower_components/eventEmitter/EventEmitter.js'
  }
}


function modules(){
  return {
    loaders: [
      {
        // @see https://github.com/petehunt/jsx-loader
        // It was installed with 'npm install jsx-loader --save' and transpiles
        // jsx code
        test: /\.jsx$/,
        loader: 'jsx-loader?harmony&stripTypes'
      }
    ],

    // used to ignore parse errors on external dependenices
    // that are 'pre-built'
    noParse: [
      /assets\/bower_components\/flux/
    ]

  }
}
